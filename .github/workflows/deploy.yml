name: Deploy Backend to NHN Cloud (Build and Deploy)

on:
  push:
    branches:
      - main # main 브랜치에 push 될 때마다 실행

jobs:
  # ===============================================================
  # 1. Build Job: GitHub 서버에서 소스코드를 빌드하여 .jar 파일을 생성
  # ===============================================================
  build:
    runs-on: ubuntu-latest
    steps:
      # (1-1) GitHub 저장소에서 코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v3

      # (1-2) JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # (1-3) Maven 빌드 실행
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # (1-4) 빌드된 .jar 파일을 Artifact로 업로드 (v3 -> v4로 수정)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-jar
          path: target/*.jar

  # ===============================================================
  # 2. Deploy Job: 빌드된 .jar 파일을 실제 서버에 배포
  # ===============================================================
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # (2-1) .jar 파일을 다운로드 (v3 -> v4로 수정)
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: executable-jar

      # (2-2) scp를 사용해 .jar 파일을 NHN Cloud 서버로 복사
      - name: Copy JAR to server via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          source: "*.jar"
          target: "/home/ubuntu/fourmen-backend"

      # (2-3) SSH로 서버에 접속해서 앱을 실행
      - name: Deploy to NHN Cloud via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/ubuntu/fourmen-backend
            pkill -f 'java -jar' || true
            nohup java -jar *.jar > app.log 2>&1 &
            sleep 5
