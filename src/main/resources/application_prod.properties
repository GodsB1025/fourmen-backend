############################################
# application-prod.properties (운영 전용)
# 공통(application.properties)을 이 값들로 오버라이드
############################################

# --- 프록시 뒤 원본 스킴/호스트 인식 (Nginx 등) ---
server.forward-headers-strategy=native

# --- 응답 압축 ---
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/json,application/javascript
server.compression.min-response-size=1024

# --- 우아한 종료 ---
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# --- JPA 운영 권장값 ---
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# --- Hikari 커넥션 풀 (소형 VM 안전값) ---
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# --- Actuator 헬스/정보 노출 (의존성 필요: spring-boot-starter-actuator) ---
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true

# --- 운영 CORS: 정적 호스팅/프론트 도메인으로 교체 (여러 개는 콤마) ---
# 예) https://frontend.example.com,https://www.example.com
app.cors.allowed-origins=${ALLOWED_ORIGINS:https://<정적호스팅_URL>}

# --- (옵션) SSE/WebSocket 장시간 연결 시 타임아웃 해제 ---
# spring.mvc.async.request-timeout=0

# --- (옵션) 운영 DB가 다를 경우 여기서 오버라이드 ---
# spring.datasource.url=jdbc:mysql://<prod-host>:3306/<db>?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}
